import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Mapper.Context;
import org.apache.hadoop.mapreduce.Reducer;


public class SearchPgm {

	public static class SMapper extends Mapper<LongWritable,Text,IntWritable>
	{
		private final static IntWritable one = new IntWritable(1); 
		private Text sentence = new Text();
		public void map(LongWritable key, Text value, Context context)
		{
			try
			{
				String mySearchText = context.getConfiguration().get("myText");
				String line = value.toString();
				String newline = line.toLowerCase();
				String newText = mySearchText.toLowerCase();
				if(mySearchText != null)
				{
					sentence.set(newline);
					context.write(sentence, one);
				}
				
				
			}
			catch(Exception e)
			{
				System.out.println(e.getMessage());
			}
		}
	}
	
	// reducer class
	
	public static class SReducer extends Reducer<Text,IntWritable,Text,IntWritable>
	{
		private IntWritable result = new IntWritable();
		public void reduce(Text key,Iterable<IntWritable> values, Context context)
		{
			try
			{
				
			}
			catch(Exception e)
			{
				System.out.println(e.getMessage());
			}
		}
	}
	
}
