import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Partitioner;
import org.apache.hadoop.util.Tool;


public class C2Cat extends Configured implements Tool {

	
	// mapper class
	public static class C2CatM extends Mapper<LongWritable,Text,Text,Text>
	{
		public void map(LongWritable key,Text value, Context context)
		{
			try
			{
				String str[] = value.toString().split(";");
				
				String catid = str[4];
				
				context.write(new Text(catid), value);
				
			}
			catch(Exception e)
			{
				System.out.println(e.getMessage());
			}
		}
	}
	
	// partitioner class
	public static class C2CatP extends Partitioner<Text,Text>
	{
		public int getPartition(Text key,Text value,int numReducetasks)
		{
			String str[] = value.toString().split(";");
			char age = str[2].charAt(0);
			
			if(age == 'A') return 0;
			else if(age == 'B') return 1;
			else if(age == 'C') return 2;
			else if(age == 'D') return 3;
			else if(age == 'E') return 4;
			else if(age == 'F') return 5;
			else if(age == 'G') return 6;
			else if(age == 'H') return 7;
			else if(age == 'I') return 8;
			else return 9;
			
		}
	}
	
}
