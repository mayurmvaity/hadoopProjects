import java.io.BufferedReader;
import java.io.FileReader;
import java.net.URI;
import java.util.HashMap;
import java.util.Map;

import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;


public class POSex {
	
	// mapper class for POS1
	public static class POSm1 extends Mapper<LongWritable,Text,Text,Text>
	{
		private Map<String,String> abMap = new HashMap<String,String>();
		
		// setup method
		public void setup(Context context)
		{
			try
			{
				super.setup(context);
				
				URI[] u = context.getCacheFiles();
				
				Path p = new Path(u[0]);
				
				if(p.getName().equals("stmaster.csv"))
				{
					BufferedReader br = new BufferedReader(new FileReader(p.toString()));
					String line = br.readLine();
					
					while(line!=null)
					{
						String str[] = line.split(",");
						String stid = str[0];
						String state = str[2];
						abMap.put(stid,state);
						line = br.readLine();
						
					}
					br.close();
				}
				
				
			}
			catch(Exception e)
			{
				System.out.println(e.getMessage());
			}
		}
		
		public void map(LongWritable key, Text value, Context context)
		{
			try
			{
				String row = value.toString();
				String str[] = row.split(",");
				String stid = str[0];
				String pid = str[1];
				String state = abMap.get(stid);
				
				String myVal = row+","+state;
				
				context.write(new Text(pid), new Text(myVal));
			}
			catch(Exception e)
			{
				System.out.println(e.getMessage());
			}
		}
		
	}
	
	// mapper class 2 for POS2
	public static class POSm2 extends Mapper<LongWritable,Text,Text,Text>
	{
		private Map<String,String> abMap1 = new HashMap<String,String>();
		
		// setup method
		public void setup(Context context)
		{
			try
			{
				super.setup(context);
				
				URI[] u = context.getCacheFiles();
				
				Path p = new Path(u[0]);
				
				if(p.getName().equals("stmaster.csv"))
				{
					BufferedReader br = new BufferedReader(new FileReader(p.toString()));
					String line = br.readLine();
					
					while(line!=null)
					{
						String str[] = line.split(",");
						String stid = str[0];
						String state = str[2];
						
						abMap1.put(stid, state);
						line = br.readLine();
					}
					br.close();
				}
				
			}
			catch(Exception e)
			{
				System.out.println(e.getMessage());
			}
		}
		
		// map method
		public void map(LongWritable key, Text value,Context context)
		{
			try
			{
				
			}
			catch(Exception e)
			{
				System.out.println(e.getMessage());
			}
		}
		
		
	}
	

	public static void main(String args[]) throws Exception
	{
		
	}
}
